name: CI

on:
  push:
  pull_request:
    branches:
      - main

env:
  MIX_ENV: test

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions
      - uses: extractions/setup-just@v2
      - name: Setup
        run: just setup-frontend
      - name: ESLint
        run: just eslint
      - name: Stylelint
        run: just stylelint
      - name: Audit
        run: just audit-frontend
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          version-type: strict
          version-file: .tool-versions
          id: beam
      - uses: extractions/setup-just@v2
      - name: Setup
        run: just setup-backend
      - name: Check formatted
        run: just check-formated
      - name: Credo
        run: just credo
      - name: Audit
        run: just audit-backend
      - name: Restore PLT cache
        uses: actions/cache/restore@v4
        id: plt_cache
        with:
          key: ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          restore-keys: ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          path: priv/dialyzer
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: just plts-create
      - name: Save PLT cache
        uses: actions/cache/save@v4
        if: steps.plt_cache.outputs.cache-hit != 'true'
        id: plt_cache_save
        with:
          key: ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          path: priv/dialyzer
      - name: Run dialyzer
        run: just dialyzer-ci
      - name: Test
        run: just test